name: CI Matrix

on: [push, pull_request]

env:
  BUILD_TYPE: Release

jobs:
  Windows:
    name: ${{ matrix.config.name }} (${{ matrix.build-type }})
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        build-type: [Release, Debug]
        config:
          - {
              name: "windows-latest",
              os: windows-latest,
              cc: "cl",
              cxx: "cl",
              environment_script: "C:/Program Files/Microsoft Visual Studio/2022/Enterprise/VC/Auxiliary/Build/vcvars64.bat",
              generators: "Visual Studio 17 2022",
            }
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Print env
        run: |
          echo github.event.action: ${{ github.event.action }}
          echo github.event_name: ${{ github.event_name }}

      - name: Setup Ninja
        uses: abdes/gha-setup-ninja@master
        with:
          version: 1.11.0

      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.13
        with:
          cmake-version: 3.21.x

      - name: Setup ccache
        # If ccache behaves badly on windows, skip this step
        # if: runner.os != 'Windows'
        uses: Chocobo1/setup-ccache-action@v1
        with:
          install_ccache: true
          update_packager_index: true
          prepend_symlinks_to_path: true
          windows_compile_environment: msvc # this field is required

      - name: Set environment
        uses: ilammy/msvc-dev-cmd@v1

      - name: Set compiler
        run: |
         echo ("CC=${{ matrix.config.cc }}") >> $env:GITHUB_ENV
         echo ("CXX=${{ matrix.config.cxx }}") >> $env:GITHUB_ENV
         echo ("PATH=$env:GITHUB_WORKSPACE;$env:PATH") >> $env:GITHUB_ENV

      - name: Configure
        run: |
          cmake `
            -S . `
            -B build `
            -D CMAKE_BUILD_TYPE=${{ matrix.build-type }} `
            -G Ninja `
            -D CMAKE_MAKE_PROGRAM=ninja `
            -D USE_CCACHE=ON `
            -D CMAKE_VERBOSE_MAKEFILE=ON

      - name: Build
        run: cmake --build build --target all --config ${{ matrix.build-type }}

      - name: Run cryptest
        run: |
          # Do not run tests in parallel as we share things between them to
          # speed up the build and enable caching. The benefit of caching is
          # much higher than parallel tests.

          ctest --verbose -R cryptest --test-dir build -C ${{ matrix.build-type }}

      - name: Run build tests
        run: |
          # Do not run tests in parallel as we share things between them to
          # speed up the build and enable caching. The benefit of caching is
          # much higher than parallel tests.
          set CC=${{ matrix.config.cc }}
          set CXX=${{ matrix.config.cxx }}
          "${{ matrix.config.environment_script }}"

          ctest -E cryptest --output-on-failure --test-dir build -C ${{ matrix.build-type }}

  MacOS:
    name: ${{ matrix.config.name }} (${{ matrix.build-type }})
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        build-type: [Release, Debug]
        config:
          - {
              name: "macos-latest",
              os: macos-latest,
              cc: "clang",
              cxx: "clang++",
              generators: "Ninja",
              omp: "OFF",
            }
          - {
              name: "macos-latest-omp-homebrew",
              os: macos-latest,
              cc: "clang",
              cxx: "clang++",
              generators: "Ninja",
              omp: "ON",
            }

          - {
              name: "macos-latest-omp-macports",
              os: macos-latest,
              cc: "clang",
              cxx: "clang++",
              generators: "Ninja",
              omp: "ON",
            }
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Print env
        run: |
          echo github.event.action: ${{ github.event.action }}
          echo github.event_name: ${{ github.event_name }}

      - name: Setup Ninja
        uses: abdes/gha-setup-ninja@master
        with:
          version: 1.11.0

      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.13
        with:
          cmake-version: 3.21.x

      - name: Setup ccache
        uses: Chocobo1/setup-ccache-action@v1
        with:
          install_ccache: true
          update_packager_index: true
          prepend_symlinks_to_path: false
          windows_compile_environment: msvc # this field is required

      - name: Install macports
        uses: melusina-org/gha-install-macports@v1
        if: endsWith(matrix.config.name, 'macports')

      - name: Install libomp (macports)
        run: |
          port install libomp
          brew uninstall --ignore-dependencies --zap libomp
        if: endsWith(matrix.config.name, 'macports')

      - name: Configure
        run: |
          CC=${{ matrix.config.cc }} export CC
          CXX=${{ matrix.config.cxx }} export CXX
          PATH=$ENV{GITHUB_WORKSPACE}:${PATH} export PATH
          cmake \
            -S . \
            -B build \
            -D CMAKE_BUILD_TYPE=${{ matrix.config.build-type }} \
            -G Ninja \
            -D CMAKE_MAKE_PROGRAM=ninja \
            -D USE_CCACHE=ON \
            -D CMAKE_VERBOSE_MAKEFILE=ON \
            -D USE_OPENMP=${{ matrix.config.omp }} \
            -D CMAKE_BUILD_TYPE=${{ matrix.build-type }}

      - name: Build
        run: |
          NINJA_STATUS="[%f/%t %o/sec] " export NINJA_STATUS
          cmake --build build --target all --config ${{ matrix.build-type }}

      - name: Run cryptest
        run: |
          # Do not run tests in parallel as we share things between them to
          # speed up the build and enable caching. The benefit of caching is
          # much higher than parallel tests.

          ctest --verbose -R "cryptest" --test-dir build -C ${{ matrix.build-type }}

      - name: Run build tests
        run: |
          # Do not run tests in parallel as we share things between them to
          # speed up the build and enable caching. The benefit of caching is
          # much higher than parallel tests.
          CC=${{ matrix.config.cc }} export CC
          CXX=${{ matrix.config.cxx }} export CXX

          ctest -E "cryptest"  --output-on-failure --test-dir build -C ${{ matrix.build-type }}

  Ubuntu:
    name: ${{ matrix.config.name }} (${{ matrix.build-type }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        build-type: [Release, Debug]
        config:
          - {
              name: "ubuntu",
              cc: "gcc-10",
              cxx: "g++-10",
              generators: "Ninja",
            }
          - {
              name: "ubuntu-gcc12",
              cc: "gcc-12",
              cxx: "g++-12",
              generators: "Ninja",
            }
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Print env
        run: |
          echo github.event.action: ${{ github.event.action }}
          echo github.event_name: ${{ github.event_name }}

      - name: Setup Ninja
        uses: abdes/gha-setup-ninja@master
        with:
          version: 1.11.0

      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.13
        with:
          cmake-version: 3.21.x

      - name: Install ccache
        shell: cmake -P {0}
        run: |
          set(ccache_version "4.6.3")
          set(ccache_dist "ccache-${ccache_version}-linux-x86_64")
          set(ccache_url "https://github.com/ccache/ccache/releases/download/v${ccache_version}/${ccache_dist}.tar.xz")
          file(DOWNLOAD "${ccache_url}" ./ccache.tar.xz SHOW_PROGRESS)
          execute_process(COMMAND ${CMAKE_COMMAND} -E tar zxvf ./ccache.tar.xz)
          # Add to PATH environment variable
          file(TO_CMAKE_PATH "$ENV{GITHUB_WORKSPACE}/${ccache_dist}" ccache_dir)
          set(path_separator ":")
          file(APPEND "$ENV{GITHUB_PATH}" "$ENV{GITHUB_WORKSPACE}${path_separator}${ccache_dir}")

      - name: Setup ccache
        uses: Chocobo1/setup-ccache-action@v1
        with:
          install_ccache: false
          update_packager_index: false
          prepend_symlinks_to_path: false
          windows_compile_environment: msvc # this field is required

      - name: Configure
        run: |
          export CC=${{ matrix.config.cc }}
          export CXX=${{ matrix.config.cxx }}
          export PATH=${GITHUB_WORKSPACE}:${PATH}

          cmake \
            -S . \
            -B build \
            -D CMAKE_BUILD_TYPE=$ENV{BUILD_TYPE} \
            -G Ninja \
            -D CMAKE_MAKE_PROGRAM=ninja \
            -D USE_CCACHE=ON \
            -D CMAKE_VERBOSE_MAKEFILE=ON \
            -D CMAKE_BUILD_TYPE=${{ matrix.build-type }}

      - name: Build
        run: |
          export NINJA_STATUS="[%f/%t %o/sec] "

          cmake --build build --target all --config ${{ matrix.build-type }}

      - name: Run cryptest
        run: |
          # Do not run tests in parallel as we share things between them to
          # speed up the build and enable caching. The benefit of caching is
          # much higher than parallel tests.

          ctest --verbose -R cryptest --test-dir build -C ${{ matrix.build-type }}

      - name: Run build tests
        run: |
          # Do not run tests in parallel as we share things between them to
          # speed up the build and enable caching. The benefit of caching is
          # much higher than parallel tests.
          export CC=${{ matrix.config.cc }}
          export CXX=${{ matrix.config.cxx }}

          ctest -E cryptest --output-on-failure --test-dir build -C ${{ matrix.build-type }}
